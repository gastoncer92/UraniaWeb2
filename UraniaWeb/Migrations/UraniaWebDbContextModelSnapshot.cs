// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UraniaWeb.Models;

namespace UraniaWeb.Migrations
{
    [DbContext(typeof(UraniaWebDbContext))]
    partial class UraniaWebDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UraniaWeb.Models.Administrador", b =>
                {
                    b.Property<int>("IdAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameAdmin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PassAdmin")
                        .HasColumnType("int");

                    b.HasKey("IdAdmin");

                    b.ToTable("Administrador");
                });

            modelBuilder.Entity("UraniaWeb.Models.Article", b =>
                {
                    b.Property<int>("IdAticle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescritionArticle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleArticle")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("UrlImagen1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImagen2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlSound1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("articleIdAticle")
                        .HasColumnType("int");

                    b.HasKey("IdAticle");

                    b.HasIndex("articleIdAticle");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("UraniaWeb.Models.Slider", b =>
                {
                    b.Property<int>("IdSlider")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TitleSlider")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UrlSlider1")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSlider");

                    b.ToTable("Slider");
                });

            modelBuilder.Entity("UraniaWeb.Models.Article", b =>
                {
                    b.HasOne("UraniaWeb.Models.Article", "article")
                        .WithMany("Articles")
                        .HasForeignKey("articleIdAticle");

                    b.Navigation("article");
                });

            modelBuilder.Entity("UraniaWeb.Models.Article", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
